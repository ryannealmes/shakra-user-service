apiVersion: v1
kind: Namespace
metadata:
  name: user-service
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: database-disk
  namespace: user-service
  labels:
    name: database
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---

apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: user-service
spec:
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    name: database
    app: mysql
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: database
  namespace: user-service
  labels:
    name: database
    app: mysql
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: database
        app: mysql
    spec:
      containers:
        - name: mysql
          image: 'mysql:5.7'
          args:
            - --ignore-db-dir=lost+found
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "prisma"
          ports:
            - name: mysql-3306
              containerPort: 3306
          volumeMounts:
            - name: database-disk
              readOnly: false
              mountPath: /var/lib/mysql
      volumes:
        - name: database-disk
          persistentVolumeClaim:
            claimName: database-disk
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-prisma-configmap
  namespace: user-service
  labels:
    app: prisma
data:
  PRISMA_CONFIG: |
    port: 4467
    # uncomment the next line and provide the env var PRISMA_MANAGEMENT_API_SECRET=my-secret to activate cluster security
    # managementApiSecret: my-secret
    databases:
      default:
        connector: mysql
        host: database
        port: 3306
        user: root
        password: prisma
        migrations: true

---

apiVersion: v1
kind: Service
metadata:
  name: prisma
  namespace: user-service
spec:
  ports:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 4467
    protocol: TCP
  selector:
    app: prisma

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prisma
  namespace: user-service
  labels:
    app: prisma
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prisma
    spec:
      containers:
        - name: prisma
          image: 'prismagraphql/prisma:1.8'
          ports:
            - name: prisma-4467
              containerPort: 4467
          env:
            - name: PRISMA_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: user-service-prisma-configmap
                  key: PRISMA_CONFIG
